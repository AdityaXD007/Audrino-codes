#define TRIG_PIN 9       // Trigger pin for Ultrasonic Sensor
#define ECHO_PIN 10      // Echo pin for Ultrasonic Sensor
#define BUZZER_PIN 8     // Buzzer pin

// Notes in the melody (in Hz)
int melody[] = {
  330, 330, 330, 330, 330, 330, 330, 392, 262, 294, 330, 
  349, 349, 349, 349, 349, 330, 330, 330, 330, 294, 294, 
  330, 294, 392
};

// Note durations (in ms)
int noteDurations[] = {
  200, 200, 400, 200, 200, 400, 200, 200, 200, 200, 400, 
  200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 
  200, 400
};

void setup() {
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(BUZZER_PIN, OUTPUT);

  Serial.begin(9600); // For debugging
}

void loop() {
  long duration, distance;

  // Send a 10us pulse to trigger pin
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  // Measure the pulse duration on the echo pin
  duration = pulseIn(ECHO_PIN, HIGH);

  // Calculate the distance in cm
  distance = duration * 0.034 / 2;

  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  // If the object is within 10 cm, play the melody
  if (distance > 0 && distance <= 10) {
    playMelody();
  } else {
    noTone(BUZZER_PIN); // Turn off the buzzer if no object is nearby
  }

  delay(100);
}

// Function to play the Jingle Bells melody
void playMelody() {
  int melodyLength = sizeof(melody) / sizeof(melody[0]);
  for (int i = 0; i < melodyLength; i++) {
    int noteDuration = noteDurations[i];
    tone(BUZZER_PIN, melody[i], noteDuration);
    delay(noteDuration * 1.3); // Delay between notes
  }
}
